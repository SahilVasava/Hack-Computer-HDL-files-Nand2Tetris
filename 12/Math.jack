// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        var int w, i;
        let w = 1;
        let i = 0;
        let twoToThe = Array.new(16);        

        while(i < 16) {
            let twoToThe[i] = w;
            let w = w + w;
            let i = i + 1;
        }
        return;
    }


    /** Returns true if the i-th bit of x is 1, false otherwise*/
    function boolean bit(int x, int i) {
        return (~((x & twoToThe[i]) = 0));
    }
        

    /** Returns the absolute value of x. */
    function int abs(int x) {
        return 1;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {

        var int sum, shiftedX, w, index;
        var boolean sthBit;
        let sum = 0;
        let index = 0;
        let shiftedX = x;
        let w = 1;
        let sthBit = Math.bit(y,15);

        while((w < y)  | sthBit) {
            
            if(Math.bit(y, index)) {
                let sum = sum + shiftedX;
            }

            let shiftedX = shiftedX + shiftedX;
            let w = w + w;
            let index = index + 1;

            if (w = twoToThe[15]) {
                let sthBit = false;
            }
        }
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        return 1;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        return 1;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        return 1;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        return 1;
    }
}
